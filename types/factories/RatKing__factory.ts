/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RatKing, RatKingInterface } from "../RatKing";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawERC20",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contentNFT",
        type: "address[]",
      },
    ],
    name: "addContentNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContentNFTList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
    ],
    name: "giftRatKing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintRatKing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minterList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20TokenContract",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052610113600c5560fa600d556019600e553480156200002157600080fd5b506040805180820182526007808252665261744b696e6760c81b6020808401828152855180870190965292855284015281519192916200006491600091620000f7565b5080516200007a906001906020840190620000f7565b50506006805460ff191690555062000092336200009d565b6001600755620001d9565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000105906200019d565b90600052602060002090601f01602090048101928262000129576000855562000174565b82601f106200014457805160ff191683800117855562000174565b8280016001018555821562000174579182015b828111156200017457825182559160200191906001019062000157565b506200018292915062000186565b5090565b5b8082111562000182576000815560010162000187565b600181811c90821680620001b257607f821691505b602082108103620001d357634e487b7160e01b600052602260045260246000fd5b50919050565b6120ce80620001e96000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80635c975abb116100f9578063a22cb46511610097578063dfec3e8611610071578063dfec3e861461036d578063e985e9c514610380578063f2fde38b146103bc578063f4f3b200146103cf57600080fd5b8063a22cb46514610334578063b88d4fde14610347578063c87b56dd1461035a57600080fd5b8063715018a6116100d3578063715018a6146103065780638456cb591461030e5780638da5cb5b1461031657806395d89b411461032c57600080fd5b80635c975abb146102c75780636352211e146102d257806370a08231146102e557600080fd5b80633ccfd60b1161016657806352a5ec861161014057806352a5ec861461027457806355f804b314610297578063597ecd7a146102aa5780635ad791cc146102b257600080fd5b80633ccfd60b146102515780633f4ba83a1461025957806342842e0e1461026157600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b3146102165780631497cb551461022b57806323b872dd1461023e575b600080fd5b6101c16101bc366004611a11565b6103e2565b60405190151581526020015b60405180910390f35b6101de6103f3565b6040516101cd9190611a86565b6101fe6101f9366004611a99565b610485565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611ace565b6104ac565b005b610229610239366004611b3f565b6105c6565b61022961024c366004611bec565b61077c565b6102296107ad565b61022961083d565b61022961026f366004611bec565b61084d565b6101c1610282366004611c28565b600b6020526000908152604090205460ff1681565b6102296102a5366004611c9b565b610868565b610229610887565b6102ba61095c565b6040516101cd9190611ce4565b60065460ff166101c1565b6101fe6102e0366004611a99565b6109bd565b6102f86102f3366004611c28565b610a1d565b6040519081526020016101cd565b610229610aa3565b610229610ab5565b60065461010090046001600160a01b03166101fe565b6101de610ac5565b610229610342366004611d3f565b610ad4565b610229610355366004611d76565b610adf565b6101de610368366004611a99565b610b17565b61022961037b366004611b3f565b610b7e565b6101c161038e366004611df2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102296103ca366004611c28565b610bf3565b6102296103dd366004611c28565b610c69565b60006103ed82610d9b565b92915050565b60606000805461040290611e25565b80601f016020809104026020016040519081016040528092919081815260200182805461042e90611e25565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b5050505050905090565b600061049082610deb565b506000908152600460205260409020546001600160a01b031690565b60006104b7826109bd565b9050806001600160a01b0316836001600160a01b0316036105295760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806105455750610545813361038e565b6105b75760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610520565b6105c18383610e4a565b505050565b6105ce610eb8565b600e54600a5482516105e09190611e75565b111561061f5760405162461bcd60e51b815260206004820152600e60248201526d2634b6b4ba103932b0b1b432b21760911b6044820152606401610520565b6106666040518060400160405280601781526020017f4769667420436f756e74657220284265666f7265293a20000000000000000000815250610661600a5490565b610f18565b6106986040518060400160405280600f81526020016e029b4bd329037b31030b93930bc9d1608d1b8152508251610f18565b60005b815181101561073d576106c68282815181106106b9576106b9611e8d565b6020026020010151610f5d565b6001600b60008484815181106106de576106de611e8d565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555061072b600a80546001019055565b8061073581611ea3565b91505061069b565b5061077960405180604001604052806016815260200175023b4b33a1021b7bab73a32b9101420b33a32b9149d160551b815250610661600a5490565b50565b6107863382610f82565b6107a25760405162461bcd60e51b815260040161052090611ebc565b6105c1838383611001565b6107b5610eb8565b6107bd611172565b6006546040516001600160a01b0361010090920491909116904780156108fc02916000818181858888f193505050501580156107fd573d6000803e3d6000fd5b506040514781527f5f5cb80d5302aa1a394a4eaaf93ab1082109e671bee9d6889f9d6f60decb68cd9060200160405180910390a161083b6001600755565b565b610845610eb8565b61083b6111cb565b6105c183838360405180602001604052806000815250610adf565b610870610eb8565b8051610883906010906020840190611962565b5050565b336000908152600b602052604090205460ff16156108d85760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e481b5a5b9d195960921b6044820152606401610520565b600d546009541061092b5760405162461bcd60e51b815260206004820152601960248201527f5075626c6963204d696e74204c696d69742072656163686564000000000000006044820152606401610520565b61093433610f5d565b336000908152600b60205260409020805460ff1916600117905561083b600980546001019055565b6060600f80548060200260200160405190810160405280929190818152602001828054801561047b57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610996575050505050905090565b6000818152600260205260408120546001600160a01b0316806103ed5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610520565b60006001600160a01b038216610a875760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610520565b506001600160a01b031660009081526003602052604090205490565b610aab610eb8565b61083b600061121d565b610abd610eb8565b61083b611277565b60606001805461040290611e25565b6108833383836112b4565b610ae93383610f82565b610b055760405162461bcd60e51b815260040161052090611ebc565b610b1184848484611382565b50505050565b6060610b2282610deb565b6000610b2c6113b5565b90506000815111610b4c5760405180602001604052806000815250610b77565b80610b56846113c4565b604051602001610b67929190611f09565b6040516020818303038152906040525b9392505050565b610b86610eb8565b60005b815181101561088357600f828281518110610ba657610ba6611e8d565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580610beb81611ea3565b915050610b89565b610bfb610eb8565b6001600160a01b038116610c605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610520565b6107798161121d565b610c71610eb8565b610c79611172565b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190611f38565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5c9190611f51565b506040514781527fc82450a2de786f6e5ca1dc3755233aba938f1007a4824199fd09043c4e31d8d39060200160405180910390a1506107796001600755565b60006001600160e01b031982166380ac58cd60e01b1480610dcc57506001600160e01b03198216635b5e139f60e01b145b806103ed57506301ffc9a760e01b6001600160e01b03198316146103ed565b6000818152600260205260409020546001600160a01b03166107795760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610520565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610e7f826109bd565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b0361010090910416331461083b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610520565b6108838282604051602401610f2e929190611f6e565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052611457565b6000610f6860085490565b9050610f78600880546001019055565b6108838282611478565b600080610f8e836109bd565b9050806001600160a01b0316846001600160a01b03161480610fd557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610ff95750836001600160a01b0316610fee84610485565b6001600160a01b0316145b949350505050565b826001600160a01b0316611014826109bd565b6001600160a01b03161461103a5760405162461bcd60e51b815260040161052090611f90565b6001600160a01b03821661109c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610520565b6110a98383836001611492565b826001600160a01b03166110bc826109bd565b6001600160a01b0316146110e25760405162461bcd60e51b815260040161052090611f90565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6002600754036111c45760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610520565b6002600755565b6111d36114a6565b6006805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600680546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61127f6114ef565b6006805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586112003390565b816001600160a01b0316836001600160a01b0316036113155760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610520565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61138d848484611001565b61139984848484611535565b610b115760405162461bcd60e51b815260040161052090611fd5565b60606010805461040290611e25565b606060006113d183611636565b600101905060008167ffffffffffffffff8111156113f1576113f1611af8565b6040519080825280601f01601f19166020018201604052801561141b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461142557509392505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b61088382826040518060200160405280600081525061170e565b61149a6114ef565b610b1184848484611741565b60065460ff1661083b5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610520565b60065460ff161561083b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610520565b60006001600160a01b0384163b1561162b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611579903390899088908890600401612027565b6020604051808303816000875af19250505080156115b4575060408051601f3d908101601f191682019092526115b191810190612064565b60015b611611573d8080156115e2576040519150601f19603f3d011682016040523d82523d6000602084013e6115e7565b606091505b5080516000036116095760405162461bcd60e51b815260040161052090611fd5565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610ff9565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116755772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106116a1576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106116bf57662386f26fc10000830492506010015b6305f5e10083106116d7576305f5e100830492506008015b61271083106116eb57612710830492506004015b606483106116fd576064830492506002015b600a83106103ed5760010192915050565b61171883836117c9565b6117256000848484611535565b6105c15760405162461bcd60e51b815260040161052090611fd5565b6001811115610b11576001600160a01b03841615611787576001600160a01b03841660009081526003602052604081208054839290611781908490612081565b90915550505b6001600160a01b03831615610b11576001600160a01b038316600090815260036020526040812080548392906117be908490611e75565b909155505050505050565b6001600160a01b03821661181f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610520565b6000818152600260205260409020546001600160a01b0316156118845760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610520565b611892600083836001611492565b6000818152600260205260409020546001600160a01b0316156118f75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610520565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461196e90611e25565b90600052602060002090601f01602090048101928261199057600085556119d6565b82601f106119a957805160ff19168380011785556119d6565b828001600101855582156119d6579182015b828111156119d65782518255916020019190600101906119bb565b506119e29291506119e6565b5090565b5b808211156119e257600081556001016119e7565b6001600160e01b03198116811461077957600080fd5b600060208284031215611a2357600080fd5b8135610b77816119fb565b60005b83811015611a49578181015183820152602001611a31565b83811115610b115750506000910152565b60008151808452611a72816020860160208601611a2e565b601f01601f19169290920160200192915050565b602081526000610b776020830184611a5a565b600060208284031215611aab57600080fd5b5035919050565b80356001600160a01b0381168114611ac957600080fd5b919050565b60008060408385031215611ae157600080fd5b611aea83611ab2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b3757611b37611af8565b604052919050565b60006020808385031215611b5257600080fd5b823567ffffffffffffffff80821115611b6a57600080fd5b818501915085601f830112611b7e57600080fd5b813581811115611b9057611b90611af8565b8060051b9150611ba1848301611b0e565b8181529183018401918481019088841115611bbb57600080fd5b938501935b83851015611be057611bd185611ab2565b82529385019390850190611bc0565b98975050505050505050565b600080600060608486031215611c0157600080fd5b611c0a84611ab2565b9250611c1860208501611ab2565b9150604084013590509250925092565b600060208284031215611c3a57600080fd5b610b7782611ab2565b600067ffffffffffffffff831115611c5d57611c5d611af8565b611c70601f8401601f1916602001611b0e565b9050828152838383011115611c8457600080fd5b828260208301376000602084830101529392505050565b600060208284031215611cad57600080fd5b813567ffffffffffffffff811115611cc457600080fd5b8201601f81018413611cd557600080fd5b610ff984823560208401611c43565b6020808252825182820181905260009190848201906040850190845b81811015611d255783516001600160a01b031683529284019291840191600101611d00565b50909695505050505050565b801515811461077957600080fd5b60008060408385031215611d5257600080fd5b611d5b83611ab2565b91506020830135611d6b81611d31565b809150509250929050565b60008060008060808587031215611d8c57600080fd5b611d9585611ab2565b9350611da360208601611ab2565b925060408501359150606085013567ffffffffffffffff811115611dc657600080fd5b8501601f81018713611dd757600080fd5b611de687823560208401611c43565b91505092959194509250565b60008060408385031215611e0557600080fd5b611e0e83611ab2565b9150611e1c60208401611ab2565b90509250929050565b600181811c90821680611e3957607f821691505b602082108103611e5957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611e8857611e88611e5f565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611eb557611eb5611e5f565b5060010190565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60008351611f1b818460208801611a2e565b835190830190611f2f818360208801611a2e565b01949350505050565b600060208284031215611f4a57600080fd5b5051919050565b600060208284031215611f6357600080fd5b8151610b7781611d31565b604081526000611f816040830185611a5a565b90508260208301529392505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061205a90830184611a5a565b9695505050505050565b60006020828403121561207657600080fd5b8151610b77816119fb565b60008282101561209357612093611e5f565b50039056fea2646970667358221220e79b4bee4119bf6a59b6aab5024eb89c3a6f80ef18233748fa3771afc61eb2f364736f6c634300080d0033";

type RatKingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RatKingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RatKing__factory extends ContractFactory {
  constructor(...args: RatKingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RatKing";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RatKing> {
    return super.deploy(overrides || {}) as Promise<RatKing>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RatKing {
    return super.attach(address) as RatKing;
  }
  connect(signer: Signer): RatKing__factory {
    return super.connect(signer) as RatKing__factory;
  }
  static readonly contractName: "RatKing";
  public readonly contractName: "RatKing";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatKingInterface {
    return new utils.Interface(_abi) as RatKingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RatKing {
    return new Contract(address, _abi, signerOrProvider) as RatKing;
  }
}
