/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RatKingSociety,
  RatKingSocietyInterface,
} from "../RatKingSociety";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaximumGiftSupplyLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaximumPublicSupplyLimitReached",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "RatKingAlreadyMinted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RatKingGifted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "RatKingMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawERC20",
    type: "event",
  },
  {
    inputs: [],
    name: "OPERATOR_FILTER_REGISTRY",
    outputs: [
      {
        internalType: "contract IOperatorFilterRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "contentNFT",
        type: "address[]",
      },
    ],
    name: "addContentNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContentNFTList",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
    ],
    name: "giftRatKing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintRatKing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minterList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20TokenContract",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405261011360105560fa60115560196012553480156200002157600080fd5b506040805180820182526007808252665261744b696e6760c81b602080840182815285518087019096529285528401528151733cc6cdda760b79bafa08df41ecfa224f810dceb6936001939290916200007d9160009162000257565b5080516200009390600190602084019062000257565b5050600a805460ff1916905550620000ab33620001fd565b6001600b556daaeb6d7670e522a718067333cd4e3b15620001f55780156200014357604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200012457600080fd5b505af115801562000139573d6000803e3d6000fd5b50505050620001f5565b6001600160a01b03821615620001945760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af29039060440162000109565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b158015620001db57600080fd5b505af1158015620001f0573d6000803e3d6000fd5b505050505b505062000339565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200026590620002fd565b90600052602060002090601f016020900481019282620002895760008555620002d4565b82601f10620002a457805160ff1916838001178555620002d4565b82800160010185558215620002d4579182015b82811115620002d4578251825591602001919060010190620002b7565b50620002e2929150620002e6565b5090565b5b80821115620002e25760008155600101620002e7565b600181811c908216806200031257607f821691505b6020821081036200033357634e487b7160e01b600052602260045260246000fd5b50919050565b61257d80620003496000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063597ecd7a1161010f57806395d89b41116100a2578063dfec3e8611610071578063dfec3e86146103e8578063e985e9c5146103fb578063f2fde38b14610437578063f4f3b2001461044a57600080fd5b806395d89b41146103a7578063a22cb465146103af578063b88d4fde146103c2578063c87b56dd146103d557600080fd5b806370a08231116100de57806370a082311461036e578063715018a6146103815780638456cb59146103895780638da5cb5b1461039157600080fd5b8063597ecd7a146103335780635ad791cc1461033b5780635c975abb146103505780636352211e1461035b57600080fd5b80632f745c591161018757806342842e0e1161015657806342842e0e146102d75780634f6ccce7146102ea57806352a5ec86146102fd57806355f804b31461032057600080fd5b80632f745c591461029f5780633ccfd60b146102b25780633f4ba83a146102ba57806341f43434146102c257600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780631497cb551461026757806318160ddd1461027a57806323b872dd1461028c57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611ecc565b61045d565b60405190151581526020015b60405180910390f35b61021a61046e565b6040516102099190611f41565b61023a610235366004611f54565b610500565b6040516001600160a01b039091168152602001610209565b610265610260366004611f89565b610527565b005b610265610275366004611ffa565b610540565b6008545b604051908152602001610209565b61026561029a3660046120a7565b61064a565b61027e6102ad366004611f89565b610675565b610265610710565b6102656107a0565b61023a6daaeb6d7670e522a718067333cd4e81565b6102656102e53660046120a7565b6107b0565b61027e6102f8366004611f54565b6107d5565b6101fd61030b3660046120e3565b600f6020526000908152604090205460ff1681565b61026561032e366004612156565b610868565b610265610887565b61034361093c565b604051610209919061219f565b600a5460ff166101fd565b61023a610369366004611f54565b61099d565b61027e61037c3660046120e3565b6109fd565b610265610a83565b610265610a95565b600a5461010090046001600160a01b031661023a565b61021a610aa5565b6102656103bd3660046121fa565b610ab4565b6102656103d0366004612231565b610ac8565b61021a6103e3366004611f54565b610af5565b6102656103f6366004611ffa565b610b5c565b6101fd6104093660046122ad565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102656104453660046120e3565b610bd1565b6102656104583660046120e3565b610c4a565b600061046882610d7c565b92915050565b60606000805461047d906122e0565b80601f01602080910402602001604051908101604052809291908181526020018280546104a9906122e0565b80156104f65780601f106104cb576101008083540402835291602001916104f6565b820191906000526020600020905b8154815290600101906020018083116104d957829003601f168201915b5050505050905090565b600061050b82610da1565b506000908152600460205260409020546001600160a01b031690565b8161053181610e00565b61053b8383610eb9565b505050565b610548610fc9565b601254600e54825161055a9190612330565b1061057857604051630bd5e80160e31b815260040160405180910390fd5b60005b815181101561061d576105a682828151811061059957610599612348565b6020026020010151611029565b6001600f60008484815181106105be576105be612348565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff02191690831515021790555061060b600e80546001019055565b806106158161235e565b91505061057b565b506040517f980f5908c4ca1bf96d49041671e853c834f94ea6b06c6a976f1f515fc5eea7a790600090a150565b826001600160a01b03811633146106645761066433610e00565b61066f84848461104e565b50505050565b6000610680836109fd565b82106106e75760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084015b60405180910390fd5b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b610718610fc9565b61072061107f565b600a546040516001600160a01b0361010090920491909116904780156108fc02916000818181858888f19350505050158015610760573d6000803e3d6000fd5b506040514781527f5f5cb80d5302aa1a394a4eaaf93ab1082109e671bee9d6889f9d6f60decb68cd9060200160405180910390a161079e6001600b55565b565b6107a8610fc9565b61079e6110d8565b826001600160a01b03811633146107ca576107ca33610e00565b61066f84848461112a565b60006107e060085490565b82106108435760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016106de565b6008828154811061085657610856612348565b90600052602060002001549050919050565b610870610fc9565b8051610883906014906020840190611e1d565b5050565b336000908152600f602052604090205460ff1615156001036108bc57604051633379447760e11b815260040160405180910390fd5b601154600d54106108e0576040516353a7db1760e01b815260040160405180910390fd5b6108e933611029565b336000908152600f60205260409020805460ff19166001179055610911600d80546001019055565b6040517fd53d5e431c035eb85264ac8ec96d54e046671d7e0d0bb0915290b77507487c0990600090a1565b606060138054806020026020016040519081016040528092919081815260200182805480156104f657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610976575050505050905090565b6000818152600260205260408120546001600160a01b0316806104685760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106de565b60006001600160a01b038216610a675760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016106de565b506001600160a01b031660009081526003602052604090205490565b610a8b610fc9565b61079e6000611145565b610a9d610fc9565b61079e61119f565b60606001805461047d906122e0565b81610abe81610e00565b61053b83836111dc565b836001600160a01b0381163314610ae257610ae233610e00565b610aee858585856111e7565b5050505050565b6060610b0082610da1565b6000610b0a611219565b90506000815111610b2a5760405180602001604052806000815250610b55565b80610b3484611228565b604051602001610b45929190612377565b6040516020818303038152906040525b9392505050565b610b64610fc9565b60005b8151811015610883576013828281518110610b8457610b84612348565b60209081029190910181015182546001810184556000938452919092200180546001600160a01b0319166001600160a01b0390921691909117905580610bc98161235e565b915050610b67565b610bd9610fc9565b6001600160a01b038116610c3e5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106de565b610c4781611145565b50565b610c52610fc9565b610c5a61107f565b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce91906123a6565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d91906123bf565b506040514781527fc82450a2de786f6e5ca1dc3755233aba938f1007a4824199fd09043c4e31d8d39060200160405180910390a150610c476001600b55565b60006001600160e01b0319821663780e9d6360e01b14806104685750610468826112bb565b6000818152600260205260409020546001600160a01b0316610c475760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016106de565b6daaeb6d7670e522a718067333cd4e3b15610c4757604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610e6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9191906123bf565b610c4757604051633b79c77360e21b81526001600160a01b03821660048201526024016106de565b6000610ec48261099d565b9050806001600160a01b0316836001600160a01b031603610f315760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016106de565b336001600160a01b0382161480610f4d5750610f4d8133610409565b610fbf5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016106de565b61053b838361130b565b600a546001600160a01b0361010090910416331461079e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106de565b6000611034600c5490565b9050611044600c80546001019055565b6108838282611379565b6110583382611393565b6110745760405162461bcd60e51b81526004016106de906123dc565b61053b838383611412565b6002600b54036110d15760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016106de565b6002600b55565b6110e0611583565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61053b83838360405180602001604052806000815250610ac8565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6111a76115cc565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861110d3390565b610883338383611612565b6111f13383611393565b61120d5760405162461bcd60e51b81526004016106de906123dc565b61066f848484846116e0565b60606014805461047d906122e0565b6060600061123583611713565b600101905060008167ffffffffffffffff81111561125557611255611fb3565b6040519080825280601f01601f19166020018201604052801561127f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461128957509392505050565b60006001600160e01b031982166380ac58cd60e01b14806112ec57506001600160e01b03198216635b5e139f60e01b145b8061046857506301ffc9a760e01b6001600160e01b0319831614610468565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906113408261099d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6108838282604051806020016040528060008152506117eb565b60008061139f8361099d565b9050806001600160a01b0316846001600160a01b031614806113e657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b8061140a5750836001600160a01b03166113ff84610500565b6001600160a01b0316145b949350505050565b826001600160a01b03166114258261099d565b6001600160a01b03161461144b5760405162461bcd60e51b81526004016106de90612429565b6001600160a01b0382166114ad5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016106de565b6114ba838383600161181e565b826001600160a01b03166114cd8261099d565b6001600160a01b0316146114f35760405162461bcd60e51b81526004016106de90612429565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a5460ff1661079e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016106de565b600a5460ff161561079e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016106de565b816001600160a01b0316836001600160a01b0316036116735760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106de565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6116eb848484611412565b6116f784848484611832565b61066f5760405162461bcd60e51b81526004016106de9061246e565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117525772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061177e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061179c57662386f26fc10000830492506010015b6305f5e10083106117b4576305f5e100830492506008015b61271083106117c857612710830492506004015b606483106117da576064830492506002015b600a83106104685760010192915050565b6117f58383611933565b6118026000848484611832565b61053b5760405162461bcd60e51b81526004016106de9061246e565b6118266115cc565b61066f84848484611acc565b60006001600160a01b0384163b1561192857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118769033908990889088906004016124c0565b6020604051808303816000875af19250505080156118b1575060408051601f3d908101601f191682019092526118ae918101906124fd565b60015b61190e573d8080156118df576040519150601f19603f3d011682016040523d82523d6000602084013e6118e4565b606091505b5080516000036119065760405162461bcd60e51b81526004016106de9061246e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061140a565b506001949350505050565b6001600160a01b0382166119895760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106de565b6000818152600260205260409020546001600160a01b0316156119ee5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106de565b6119fc60008383600161181e565b6000818152600260205260409020546001600160a01b031615611a615760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106de565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611ad884848484611c05565b6001811115611b475760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016106de565b816001600160a01b038516611ba357611b9e81600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611bc6565b836001600160a01b0316856001600160a01b031614611bc657611bc68582611c8d565b6001600160a01b038416611be257611bdd81611d2a565b610aee565b846001600160a01b0316846001600160a01b031614610aee57610aee8482611dd9565b600181111561066f576001600160a01b03841615611c4b576001600160a01b03841660009081526003602052604081208054839290611c4590849061251a565b90915550505b6001600160a01b0383161561066f576001600160a01b03831660009081526003602052604081208054839290611c82908490612330565b909155505050505050565b60006001611c9a846109fd565b611ca4919061251a565b600083815260076020526040902054909150808214611cf7576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611d3c9060019061251a565b60008381526009602052604081205460088054939450909284908110611d6457611d64612348565b906000526020600020015490508060088381548110611d8557611d85612348565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611dbd57611dbd612531565b6001900381819060005260206000200160009055905550505050565b6000611de4836109fd565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611e29906122e0565b90600052602060002090601f016020900481019282611e4b5760008555611e91565b82601f10611e6457805160ff1916838001178555611e91565b82800160010185558215611e91579182015b82811115611e91578251825591602001919060010190611e76565b50611e9d929150611ea1565b5090565b5b80821115611e9d5760008155600101611ea2565b6001600160e01b031981168114610c4757600080fd5b600060208284031215611ede57600080fd5b8135610b5581611eb6565b60005b83811015611f04578181015183820152602001611eec565b8381111561066f5750506000910152565b60008151808452611f2d816020860160208601611ee9565b601f01601f19169290920160200192915050565b602081526000610b556020830184611f15565b600060208284031215611f6657600080fd5b5035919050565b80356001600160a01b0381168114611f8457600080fd5b919050565b60008060408385031215611f9c57600080fd5b611fa583611f6d565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611ff257611ff2611fb3565b604052919050565b6000602080838503121561200d57600080fd5b823567ffffffffffffffff8082111561202557600080fd5b818501915085601f83011261203957600080fd5b81358181111561204b5761204b611fb3565b8060051b915061205c848301611fc9565b818152918301840191848101908884111561207657600080fd5b938501935b8385101561209b5761208c85611f6d565b8252938501939085019061207b565b98975050505050505050565b6000806000606084860312156120bc57600080fd5b6120c584611f6d565b92506120d360208501611f6d565b9150604084013590509250925092565b6000602082840312156120f557600080fd5b610b5582611f6d565b600067ffffffffffffffff83111561211857612118611fb3565b61212b601f8401601f1916602001611fc9565b905082815283838301111561213f57600080fd5b828260208301376000602084830101529392505050565b60006020828403121561216857600080fd5b813567ffffffffffffffff81111561217f57600080fd5b8201601f8101841361219057600080fd5b61140a848235602084016120fe565b6020808252825182820181905260009190848201906040850190845b818110156121e05783516001600160a01b0316835292840192918401916001016121bb565b50909695505050505050565b8015158114610c4757600080fd5b6000806040838503121561220d57600080fd5b61221683611f6d565b91506020830135612226816121ec565b809150509250929050565b6000806000806080858703121561224757600080fd5b61225085611f6d565b935061225e60208601611f6d565b925060408501359150606085013567ffffffffffffffff81111561228157600080fd5b8501601f8101871361229257600080fd5b6122a1878235602084016120fe565b91505092959194509250565b600080604083850312156122c057600080fd5b6122c983611f6d565b91506122d760208401611f6d565b90509250929050565b600181811c908216806122f457607f821691505b60208210810361231457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156123435761234361231a565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600182016123705761237061231a565b5060010190565b60008351612389818460208801611ee9565b83519083019061239d818360208801611ee9565b01949350505050565b6000602082840312156123b857600080fd5b5051919050565b6000602082840312156123d157600080fd5b8151610b55816121ec565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906124f390830184611f15565b9695505050505050565b60006020828403121561250f57600080fd5b8151610b5581611eb6565b60008282101561252c5761252c61231a565b500390565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220850a189cf7ffd76e5fa5d97d3b5766c8b0498a510268a885487b329cacb5a08a64736f6c634300080d0033";

type RatKingSocietyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RatKingSocietyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RatKingSociety__factory extends ContractFactory {
  constructor(...args: RatKingSocietyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RatKingSociety";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RatKingSociety> {
    return super.deploy(overrides || {}) as Promise<RatKingSociety>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RatKingSociety {
    return super.attach(address) as RatKingSociety;
  }
  connect(signer: Signer): RatKingSociety__factory {
    return super.connect(signer) as RatKingSociety__factory;
  }
  static readonly contractName: "RatKingSociety";
  public readonly contractName: "RatKingSociety";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RatKingSocietyInterface {
    return new utils.Interface(_abi) as RatKingSocietyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RatKingSociety {
    return new Contract(address, _abi, signerOrProvider) as RatKingSociety;
  }
}
