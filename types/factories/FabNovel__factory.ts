/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FabNovel, FabNovelInterface } from "../FabNovel";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaximumPublicSupplyLimitReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoFreeContentNFTOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "NotYourRatKing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "RatKingHasAlreadyMintedFreeNFT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FabNovelMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawBalance",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "WithdrawERC20",
    type: "event",
  },
  {
    inputs: [],
    name: "OPERATOR_FILTER_REGISTRY",
    outputs: [
      {
        internalType: "contract IOperatorFilterRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratKing",
        type: "uint256",
      },
    ],
    name: "checkFabMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ratKing",
        type: "uint256",
      },
    ],
    name: "mintFabNovel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "lockedContentURI",
        type: "string",
      },
    ],
    name: "setLockedContent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ratAdd",
        type: "address",
      },
    ],
    name: "setRatKingAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockContent",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "erc20TokenContract",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526064600e553480156200001657600080fd5b50604080518082018252600880825267119858939bdd995b60c21b602080840182815285518087019096529285528401528151733cc6cdda760b79bafa08df41ecfa224f810dceb69360019392909162000073916000916200024d565b508051620000899060019060208401906200024d565b5050600a805460ff1916905550620000a133620001f3565b6001600b556daaeb6d7670e522a718067333cd4e3b15620001eb5780156200013957604051633e9f1edf60e11b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e90637d3e3dbe906044015b600060405180830381600087803b1580156200011a57600080fd5b505af11580156200012f573d6000803e3d6000fd5b50505050620001eb565b6001600160a01b038216156200018a5760405163a0af290360e01b81523060048201526001600160a01b03831660248201526daaeb6d7670e522a718067333cd4e9063a0af290390604401620000ff565b604051632210724360e11b81523060048201526daaeb6d7670e522a718067333cd4e90634420e48690602401600060405180830381600087803b158015620001d157600080fd5b505af1158015620001e6573d6000803e3d6000fd5b505050505b50506200032f565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200025b90620002f3565b90600052602060002090601f0160209004810192826200027f5760008555620002ca565b82601f106200029a57805160ff1916838001178555620002ca565b82800160010185558215620002ca579182015b82811115620002ca578251825591602001919060010190620002ad565b50620002d8929150620002dc565b5090565b5b80821115620002d85760008155600101620002dd565b600181811c908216806200030857607f821691505b6020821081036200032957634e487b7160e01b600052602260045260246000fd5b50919050565b612417806200033f6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80635c975abb1161010f578063a22cb465116100a2578063e7835e6a11610071578063e7835e6a146103e6578063e985e9c5146103f9578063f2fde38b14610435578063f4f3b2001461044857600080fd5b8063a22cb4651461039a578063b88d4fde146103ad578063c87b56dd146103c0578063d725e5b4146103d357600080fd5b80638456cb59116100de5780638456cb59146103615780638bb78d46146103695780638da5cb5b1461037c57806395d89b411461039257600080fd5b80635c975abb146103285780636352211e1461033357806370a0823114610346578063715018a61461035957600080fd5b80632f745c591161018757806341f434341161015657806341f43434146102da57806342842e0e146102ef5780634f6ccce71461030257806355f804b31461031557600080fd5b80632f745c59146102af57806331d485e7146102c25780633ccfd60b146102ca5780633f4ba83a146102d257600080fd5b8063095ea7b3116101c3578063095ea7b3146102525780630c9d1fab1461026757806318160ddd1461028a57806323b872dd1461029c57600080fd5b806301ffc9a7146101ea57806306fdde0314610212578063081812fc14610227575b600080fd5b6101fd6101f8366004611e6c565b61045b565b60405190151581526020015b60405180910390f35b61021a61046c565b6040516102099190611ee1565b61023a610235366004611ef4565b6104fe565b6040516001600160a01b039091168152602001610209565b610265610260366004611f22565b610525565b005b6101fd610275366004611ef4565b6000908152600d602052604090205460ff1690565b6008545b604051908152602001610209565b6102656102aa366004611f4e565b61053e565b61028e6102bd366004611f22565b610569565b61021a610604565b61026561063c565b610265610727565b61023a6daaeb6d7670e522a718067333cd4e81565b6102656102fd366004611f4e565b610737565b61028e610310366004611ef4565b61075c565b61026561032336600461201b565b6107ef565b600a5460ff166101fd565b61023a610341366004611ef4565b61080e565b61028e610354366004612064565b61086e565b6102656108f4565b610265610906565b610265610377366004612064565b610916565b600a5461010090046001600160a01b031661023a565b61021a61094a565b6102656103a836600461208f565b610959565b6102656103bb3660046120c8565b61096d565b61021a6103ce366004611ef4565b61099a565b6102656103e136600461201b565b610a01565b6102656103f4366004611ef4565b610a1c565b6101fd610407366004612148565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610265610443366004612064565b610b1b565b610265610456366004612064565b610b94565b600061046682610cef565b92915050565b60606000805461047b90612176565b80601f01602080910402602001604051908101604052809291908181526020018280546104a790612176565b80156104f45780601f106104c9576101008083540402835291602001916104f4565b820191906000526020600020905b8154815290600101906020018083116104d757829003601f168201915b5050505050905090565b600061050982610d14565b506000908152600460205260409020546001600160a01b031690565b8161052f81610d73565b6105398383610e2c565b505050565b826001600160a01b03811633146105585761055833610d73565b610563848484610f3c565b50505050565b60006105748361086e565b82106105db5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084015b60405180910390fd5b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b606060016106113361086e565b101561062f57604051621580c960e71b815260040160405180910390fd5b6010805461047b90612176565b610644610f6d565b61064c610fcd565b600a5460405160009161010090046001600160a01b03169047908381818185875af1925050503d806000811461069e576040519150601f19603f3d011682016040523d82523d6000602084013e6106a3565b606091505b50509050806106e75760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b60448201526064016105d2565b6040514781527f5f5cb80d5302aa1a394a4eaaf93ab1082109e671bee9d6889f9d6f60decb68cd9060200160405180910390a1506107256001600b55565b565b61072f610f6d565b610725611026565b826001600160a01b03811633146107515761075133610d73565b610563848484611078565b600061076760085490565b82106107ca5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016105d2565b600882815481106107dd576107dd6121b0565b90600052602060002001549050919050565b6107f7610f6d565b805161080a90600f906020840190611dbd565b5050565b6000818152600260205260408120546001600160a01b0316806104665760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b60006001600160a01b0382166108d85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105d2565b506001600160a01b031660009081526003602052604090205490565b6108fc610f6d565b6107256000611093565b61090e610f6d565b6107256110ed565b61091e610f6d565b601280546001600160a01b039092166001600160a01b0319928316811790915560118054909216179055565b60606001805461047b90612176565b8161096381610d73565b610539838361112a565b836001600160a01b03811633146109875761098733610d73565b61099385858585611135565b5050505050565b60606109a582610d14565b60006109af611167565b905060008151116109cf57604051806020016040528060008152506109fa565b806109d984611176565b6040516020016109ea9291906121c6565b6040516020818303038152906040525b9392505050565b610a09610f6d565b805161080a906010906020840190611dbd565b600e54600c5410610a40576040516353a7db1760e01b815260040160405180910390fd5b6000818152600d602052604090205460ff161515600103610a74576040516348d3ba6760e11b815260040160405180910390fd5b6011546040516331a9108f60e11b81526004810183905233916001600160a01b031690636352211e90602401602060405180830381865afa158015610abd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae191906121f5565b6001600160a01b031614610b0857604051630850409f60e01b815260040160405180910390fd5b610b1133611209565b600052600d602052565b610b23610f6d565b6001600160a01b038116610b885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105d2565b610b9181611093565b50565b610b9c610f6d565b610ba4610fcd565b806000610bbf600a546001600160a01b036101009091041690565b6040516370a0823160e01b81523060048201526001600160a01b03918216918416906370a0823190602401602060405180830381865afa158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b9190612212565b604051600081818185875af1925050503d8060008114610c67576040519150601f19603f3d011682016040523d82523d6000602084013e610c6c565b606091505b5050905080610cb05760405162461bcd60e51b815260206004820152601060248201526f5472616e73666572206661696c65642160801b60448201526064016105d2565b6040514781527fc82450a2de786f6e5ca1dc3755233aba938f1007a4824199fd09043c4e31d8d39060200160405180910390a15050610b916001600b55565b60006001600160e01b0319821663780e9d6360e01b148061046657506104668261125b565b6000818152600260205260409020546001600160a01b0316610b915760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105d2565b6daaeb6d7670e522a718067333cd4e3b15610b9157604051633185c44d60e21b81523060048201526001600160a01b03821660248201526daaeb6d7670e522a718067333cd4e9063c617113490604401602060405180830381865afa158015610de0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e04919061222b565b610b9157604051633b79c77360e21b81526001600160a01b03821660048201526024016105d2565b6000610e378261080e565b9050806001600160a01b0316836001600160a01b031603610ea45760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016105d2565b336001600160a01b0382161480610ec05750610ec08133610407565b610f325760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016105d2565b61053983836112ab565b610f463382611319565b610f625760405162461bcd60e51b81526004016105d290612248565b610539838383611398565b600a546001600160a01b036101009091041633146107255760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d2565b6002600b540361101f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d2565b6002600b55565b61102e611509565b600a805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6105398383836040518060200160405280600081525061096d565b600a80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6110f5611552565b600a805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861105b3390565b61080a338383611598565b61113f3383611319565b61115b5760405162461bcd60e51b81526004016105d290612248565b61056384848484611666565b6060600f805461047b90612176565b6060600061118383611699565b600101905060008167ffffffffffffffff8111156111a3576111a3611f8f565b6040519080825280601f01601f1916602001820160405280156111cd576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111d757509392505050565b6000611214600c5490565b9050611224600c80546001019055565b61122e8282611771565b6040517f11593514eb578a4ed45798f386a06213495c20c5c779f19e663a29f6f96ce2f290600090a15050565b60006001600160e01b031982166380ac58cd60e01b148061128c57506001600160e01b03198216635b5e139f60e01b145b8061046657506301ffc9a760e01b6001600160e01b0319831614610466565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112e08261080e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806113258361080e565b9050806001600160a01b0316846001600160a01b0316148061136c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806113905750836001600160a01b0316611385846104fe565b6001600160a01b0316145b949350505050565b826001600160a01b03166113ab8261080e565b6001600160a01b0316146113d15760405162461bcd60e51b81526004016105d290612295565b6001600160a01b0382166114335760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016105d2565b611440838383600161178b565b826001600160a01b03166114538261080e565b6001600160a01b0316146114795760405162461bcd60e51b81526004016105d290612295565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a5460ff166107255760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105d2565b600a5460ff16156107255760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d2565b816001600160a01b0316836001600160a01b0316036115f95760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105d2565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611671848484611398565b61167d8484848461179f565b6105635760405162461bcd60e51b81526004016105d2906122da565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106116d85772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611704576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061172257662386f26fc10000830492506010015b6305f5e100831061173a576305f5e100830492506008015b612710831061174e57612710830492506004015b60648310611760576064830492506002015b600a83106104665760010192915050565b61080a8282604051806020016040528060008152506118a0565b611793611552565b610563848484846118d3565b60006001600160a01b0384163b1561189557604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906117e390339089908890889060040161232c565b6020604051808303816000875af192505050801561181e575060408051601f3d908101601f1916820190925261181b91810190612369565b60015b61187b573d80801561184c576040519150601f19603f3d011682016040523d82523d6000602084013e611851565b606091505b5080516000036118735760405162461bcd60e51b81526004016105d2906122da565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611390565b506001949350505050565b6118aa8383611a0c565b6118b7600084848461179f565b6105395760405162461bcd60e51b81526004016105d2906122da565b6118df84848484611ba5565b600181111561194e5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b60648201526084016105d2565b816001600160a01b0385166119aa576119a581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b6119cd565b836001600160a01b0316856001600160a01b0316146119cd576119cd8582611c2d565b6001600160a01b0384166119e9576119e481611cca565b610993565b846001600160a01b0316846001600160a01b031614610993576109938482611d79565b6001600160a01b038216611a625760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105d2565b6000818152600260205260409020546001600160a01b031615611ac75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d2565b611ad560008383600161178b565b6000818152600260205260409020546001600160a01b031615611b3a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105d2565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001811115610563576001600160a01b03841615611beb576001600160a01b03841660009081526003602052604081208054839290611be590849061239c565b90915550505b6001600160a01b03831615610563576001600160a01b03831660009081526003602052604081208054839290611c229084906123b3565b909155505050505050565b60006001611c3a8461086e565b611c44919061239c565b600083815260076020526040902054909150808214611c97576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611cdc9060019061239c565b60008381526009602052604081205460088054939450909284908110611d0457611d046121b0565b906000526020600020015490508060088381548110611d2557611d256121b0565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611d5d57611d5d6123cb565b6001900381819060005260206000200160009055905550505050565b6000611d848361086e565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611dc990612176565b90600052602060002090601f016020900481019282611deb5760008555611e31565b82601f10611e0457805160ff1916838001178555611e31565b82800160010185558215611e31579182015b82811115611e31578251825591602001919060010190611e16565b50611e3d929150611e41565b5090565b5b80821115611e3d5760008155600101611e42565b6001600160e01b031981168114610b9157600080fd5b600060208284031215611e7e57600080fd5b81356109fa81611e56565b60005b83811015611ea4578181015183820152602001611e8c565b838111156105635750506000910152565b60008151808452611ecd816020860160208601611e89565b601f01601f19169290920160200192915050565b6020815260006109fa6020830184611eb5565b600060208284031215611f0657600080fd5b5035919050565b6001600160a01b0381168114610b9157600080fd5b60008060408385031215611f3557600080fd5b8235611f4081611f0d565b946020939093013593505050565b600080600060608486031215611f6357600080fd5b8335611f6e81611f0d565b92506020840135611f7e81611f0d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611fc057611fc0611f8f565b604051601f8501601f19908116603f01168101908282118183101715611fe857611fe8611f8f565b8160405280935085815286868601111561200157600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561202d57600080fd5b813567ffffffffffffffff81111561204457600080fd5b8201601f8101841361205557600080fd5b61139084823560208401611fa5565b60006020828403121561207657600080fd5b81356109fa81611f0d565b8015158114610b9157600080fd5b600080604083850312156120a257600080fd5b82356120ad81611f0d565b915060208301356120bd81612081565b809150509250929050565b600080600080608085870312156120de57600080fd5b84356120e981611f0d565b935060208501356120f981611f0d565b925060408501359150606085013567ffffffffffffffff81111561211c57600080fd5b8501601f8101871361212d57600080fd5b61213c87823560208401611fa5565b91505092959194509250565b6000806040838503121561215b57600080fd5b823561216681611f0d565b915060208301356120bd81611f0d565b600181811c9082168061218a57607f821691505b6020821081036121aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600083516121d8818460208801611e89565b8351908301906121ec818360208801611e89565b01949350505050565b60006020828403121561220757600080fd5b81516109fa81611f0d565b60006020828403121561222457600080fd5b5051919050565b60006020828403121561223d57600080fd5b81516109fa81612081565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061235f90830184611eb5565b9695505050505050565b60006020828403121561237b57600080fd5b81516109fa81611e56565b634e487b7160e01b600052601160045260246000fd5b6000828210156123ae576123ae612386565b500390565b600082198211156123c6576123c6612386565b500190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b5fee4d6c3a19c905dd26882ed1c6d8ed2071d026007e8d6ea858bdfc2d9634b64736f6c634300080d0033";

type FabNovelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FabNovelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FabNovel__factory extends ContractFactory {
  constructor(...args: FabNovelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "FabNovel";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FabNovel> {
    return super.deploy(overrides || {}) as Promise<FabNovel>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FabNovel {
    return super.attach(address) as FabNovel;
  }
  connect(signer: Signer): FabNovel__factory {
    return super.connect(signer) as FabNovel__factory;
  }
  static readonly contractName: "FabNovel";
  public readonly contractName: "FabNovel";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FabNovelInterface {
    return new utils.Interface(_abi) as FabNovelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FabNovel {
    return new Contract(address, _abi, signerOrProvider) as FabNovel;
  }
}
